#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 78 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 43 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 20 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1           0 1935 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 178
(
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname ProblemSe"
 #"t4) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t con"
 #"structor repeating-decimal #f #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";; Problem 1:"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 5 #"henry"
0 0 23 3 2 #" ("
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 49 #";;a Henry is a (make-henry RealNumber RealNumber)"
0 0 23 29 1 #"\n"
0 0 17 3 47 #";; interp. the x and y coordinates respectively"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 6 #"henry1"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-henry"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 6 #"henry2"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-henry"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"henry-temp"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    (("
0 0 14 3 7 #"henry-x"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 7 #"henry-y"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 7 #"cupcake"
0 0 23 3 2 #" ("
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 54 #";; a Cupcake is a (make-cupcake RealNumber RealNumber)"
0 0 23 29 1 #"\n"
0 0 17 3 47 #";; interp. the x and y coordinates respectively"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 8 #"cupcake1"
0 0 23 3 2 #" ("
0 0 14 3 12 #"make-cupcake"
0 0 23 3 1 #" "
0 0 20 3 2 #"25"
0 0 23 3 1 #" "
0 0 20 3 2 #"25"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 8 #"cupcake2"
0 0 23 3 2 #" ("
0 0 14 3 12 #"make-cupcake"
0 0 23 3 1 #" "
0 0 20 3 2 #"70"
0 0 23 3 1 #" "
0 0 20 3 2 #"70"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"cupcake-temp"
0 0 23 3 1 #" "
0 0 14 3 9 #"a-cupcake"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    (("
0 0 14 3 9 #"cupcake-x"
0 0 23 3 1 #" "
0 0 14 3 9 #"a-cupcake"
0 0 23 3 1 #" "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 9 #"cupcake-y"
0 0 23 3 1 #" "
0 0 14 3 9 #"a-cupcake"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 2 #"wp"
0 0 23 3 2 #" ("
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 50 #";; a Waypoint is a (make-wp RealNumber RealNumber)"
0 0 23 29 1 #"\n"
0 0 17 3 47 #";; interp. the x and y coordinates respectively"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 3 #"wp1"
0 0 23 3 2 #" ("
0 0 14 3 7 #"make-wp"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 3 #"wp2"
0 0 23 3 2 #" ("
0 0 14 3 7 #"make-wp"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 7 #"wp-temp"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-wp"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    (("
0 0 14 3 4 #"wp-x"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-wp"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 4 #"wp-y"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-wp"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";; a CupcakeLocs is one of:"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";; - empty"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";; - (cons Cupcake CupcakeLocs)"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 16 #"CupcakeLocs-temp"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-ccl"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-ccl"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"          [("
0 0 14 3 5 #"cons?"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-ccl"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-ccl"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                         "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 16 #"CupcakeLocs-temp"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-ccl"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 28 #";; a WaypointLocs is one of:"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";; - empty"
0 0 23 29 1 #"\n"
0 0 17 3 33 #";; - (cons Waypoint WaypointLocs)"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"wplocs1"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 3 #"wp1"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 3 #"wp2"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"wplocs2"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 3 #"wp2"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 14 3 3 #"wp1"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"WaypointLocs-temp"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-wpl"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-wpl"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"          [("
0 0 14 3 5 #"cons?"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-wpl"
0 0 23 3 2 #") "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-wpl"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                         "
0 0 14 3 3 #"..."
0 0 23 3 2 #" ("
0 0 14 3 17 #"WaypointLocs-temp"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 5 #"a-wpl"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 2 #"ws"
0 0 23 3 2 #" ("
0 0 14 3 12 #"cupcake-locs"
0 0 23 3 1 #" "
0 0 14 3 13 #"waypoint-locs"
0 0 23 3 1 #" "
0 0 14 3 5 #"henry"
0 0 23 3 1 #" "
0 0 14 3 4 #"time"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 78
(
 #";; A WorldState is a structure (make-ws CupcakeLocs WaypointLocs Hen"
 #"ry Number)"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 40 #";; main : NaturalNumber -> NaturalNumber"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"main"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 8 #"big-bang"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-initial-ws"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ["
0 0 14 3 7 #"on-tick"
0 0 23 3 1 #" "
0 0 14 3 4 #"tock"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ["
0 0 14 3 8 #"on-mouse"
0 0 23 3 1 #" "
0 0 14 3 13 #"make-waypoint"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"            ["
0 0 14 3 7 #"to-draw"
0 0 23 3 1 #" "
0 0 14 3 6 #"render"
0 0 23 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";; Wish List:"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";; tock : implement logic"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";; render: create image"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";; make-waypoint: process input"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";; make-initial-ws"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";; Problem 2:"
0 0 23 29 1 #"\n"
0 0 17 3 73
(
 #";; Design the function that moves the player\342\200\231s avatar by "
 #"a fixed number"
) 0 0 23 29 1 #"\n"
0 0 17 3 75
(
 #";; of pixels D in the direction of the next waypoint. The function c"
 #"onsumes"
) 0 0 23 29 1 #"\n"
0 0 17 3 79
(
 #";; a representation of the avatar, a representation of a waypoint, a"
 #"nd produces"
) 0 0 23 29 1 #"\n"
0 0 17 3 74
(
 #";; a revised avatar with an appropriate location. Assume that the di"
 #"stance"
) 0 0 23 29 1 #"\n"
0 0 17 3 63
#";; between the avatar and the waypoint is larger than D pixels."
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";; move-henry"
0 0 23 29 1 #"\n"
0 0 17 3 30 #";; Henry WaypointLocs -> Henry"
0 0 23 29 1 #"\n"
0 0 17 3 53 #";; interp. moves henry one pixel towards the waypoint"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"move-henry"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 1 #" "
0 0 14 3 8 #"a-wplocs"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 8 #"a-wplocs"
0 0 23 3 2 #") "
0 0 14 3 7 #"a-henry"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 1 #"<"
0 0 23 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 7 #"henry-x"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 3 #") ("
0 0 14 3 4 #"wp-x"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 8 #"a-wplocs"
0 0 23 3 4 #"))) "
0 0 20 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 4 #"expt"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 7 #"henry-y"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 3 #") ("
0 0 14 3 4 #"wp-y"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 8 #"a-wplocs"
0 0 23 3 4 #"))) "
0 0 20 3 1 #"2"
0 0 23 3 4 #"))) "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 10 #"make-henry"
0 0 23 3 2 #" ("
0 0 14 3 4 #"wp-x"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 8 #"a-wplocs"
0 0 23 3 4 #")) ("
0 0 14 3 4 #"wp-y"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 8 #"a-wplocs"
0 0 23 3 4 #")))]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 8 #"a-wplocs"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 10 #"make-henry"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 7 #"henry-x"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                        ("
0 0 14 3 6 #"find-x"
0 0 23 3 2 #" ("
0 0 14 3 10 #"find-theta"
0 0 23 3 2 #" ("
0 0 14 3 7 #"henry-x"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 45 #"                                            ("
0 0 14 3 7 #"henry-y"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 45 #"                                            ("
0 0 14 3 4 #"wp-x"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 8 #"a-wplocs"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 45 #"                                            ("
0 0 14 3 4 #"wp-y"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 8 #"a-wplocs"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 7 #"henry-y"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                        ("
0 0 14 3 6 #"find-y"
0 0 23 3 2 #" ("
0 0 14 3 10 #"find-theta"
0 0 23 3 2 #" ("
0 0 14 3 7 #"henry-x"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 45 #"                                            ("
0 0 14 3 7 #"henry-y"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 45 #"                                            ("
0 0 14 3 4 #"wp-x"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 8 #"a-wplocs"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 45 #"                                            ("
0 0 14 3 4 #"wp-y"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 8 #"a-wplocs"
0 0 23 3 9 #"))))))]))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 10 #"move-henry"
0 0 23 3 1 #" "
0 0 14 3 6 #"henry1"
0 0 23 3 1 #" "
0 0 14 3 7 #"wplocs1"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 10 #"make-henry"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #") "
0 0 20 3 1 #"2"
0 0 23 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #") "
0 0 20 3 1 #"2"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 20 3 9 #".00000001"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 10 #"move-henry"
0 0 23 3 1 #" "
0 0 14 3 6 #"henry2"
0 0 23 3 1 #" "
0 0 14 3 7 #"wplocs2"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 10 #"make-henry"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #") "
0 0 20 3 1 #"2"
0 0 23 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #") "
0 0 20 3 1 #"2"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 20 3 9 #".00000001"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";; find-theta"
0 0 23 29 1 #"\n"
0 0 17 3 47 #";; Number Number Number Number -> InexactNumber"
0 0 23 29 1 #"\n"
0 0 17 3 72
(
 #";; interp. takes two cartesian coords and returns the angle of the r"
 #"ight"
) 0 0 23 29 1 #"\n"
0 0 17 3 31 #";; triangle formed between them"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"find-theta"
0 0 23 3 1 #" "
0 0 14 3 2 #"x1"
0 0 23 3 1 #" "
0 0 14 3 2 #"y1"
0 0 23 3 1 #" "
0 0 14 3 2 #"x2"
0 0 23 3 1 #" "
0 0 14 3 2 #"y2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"atan"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 2 #"y2"
0 0 23 3 1 #" "
0 0 14 3 2 #"y1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 2 #"x2"
0 0 23 3 1 #" "
0 0 14 3 2 #"x1"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 10 #"find-theta"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 3 #") ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 14 3 2 #"pi"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 2 #") "
0 0 20 3 12 #".00000000001"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 10 #"find-theta"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 14 3 2 #"pi"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 2 #") "
0 0 14 3 2 #"pi"
0 0 23 3 2 #") "
0 0 20 3 12 #".00000000001"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 9 #";; find-x"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";; Number -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 52 #";; interp. takes a theta and outputs the change in x"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 6 #"find-x"
0 0 23 3 1 #" "
0 0 14 3 5 #"theta"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 3 #"cos"
0 0 23 3 1 #" "
0 0 14 3 5 #"theta"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 6 #"find-x"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 14 3 2 #"pi"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #") "
0 0 20 3 1 #"2"
0 0 23 3 2 #") "
0 0 20 3 12 #".00000000001"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 9 #";; find-y"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";; Number -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 52 #";; interp. takes a theta and outputs the change in x"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 6 #"find-y"
0 0 23 3 1 #" "
0 0 14 3 5 #"theta"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 3 #"sin"
0 0 23 3 1 #" "
0 0 14 3 5 #"theta"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 23 3 2 #" ("
0 0 14 3 6 #"find-y"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 14 3 2 #"pi"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #") "
0 0 20 3 1 #"2"
0 0 23 3 2 #") "
0 0 20 3 12 #".00000000001"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";; Problem 3:"
0 0 23 29 1 #"\n"
0 0 17 3 66
#";; Design the remaining functions from the wish list of problem 1."
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";; Wish List:"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";; tock : implement logic"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";; render: create image"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";; make-waypoint: process input"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";; make-initial-ws"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";; tock"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";; WS -> WS"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";; interp. move henry towards next waypoint"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";; deletes cupcake if eaten"
0 0 23 29 1 #"\n"
0 0 17 3 9 #";; Given:"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";; Expect:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"tock"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 9 #"gameover?"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 3 #") ("
0 0 14 3 9 #"stop-with"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 13 #"near-cupcake?"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 25 #"current-waypoint-reached?"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 7 #"make-ws"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 2 #" ("
0 0 14 3 15 #"ws-cupcake-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 4 #"rest"
0 0 23 3 2 #" ("
0 0 14 3 16 #"ws-waypoint-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 10 #"move-henry"
0 0 23 3 2 #" ("
0 0 14 3 8 #"ws-henry"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 3 #") ("
0 0 14 3 16 #"ws-waypoint-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 7 #"ws-time"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 7 #"make-ws"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 2 #" ("
0 0 14 3 15 #"ws-cupcake-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 16 #"ws-waypoint-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 10 #"move-henry"
0 0 23 3 2 #" ("
0 0 14 3 8 #"ws-henry"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 3 #") ("
0 0 14 3 16 #"ws-waypoint-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 7 #"ws-time"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 4 #")))]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 13 #"near-cupcake?"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 25 #"current-waypoint-reached?"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 7 #"make-ws"
0 0 23 3 2 #" ("
0 0 14 3 15 #"ws-cupcake-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 4 #"rest"
0 0 23 3 2 #" ("
0 0 14 3 16 #"ws-waypoint-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 10 #"move-henry"
0 0 23 3 2 #" ("
0 0 14 3 8 #"ws-henry"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 3 #") ("
0 0 14 3 16 #"ws-waypoint-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 7 #"ws-time"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 7 #"make-ws"
0 0 23 3 2 #" ("
0 0 14 3 15 #"ws-cupcake-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 16 #"ws-waypoint-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 10 #"move-henry"
0 0 23 3 2 #" ("
0 0 14 3 8 #"ws-henry"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 3 #") ("
0 0 14 3 16 #"ws-waypoint-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 7 #"ws-time"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; gameover?"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";; WS -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 44 #";; interp. Checks to see if the game is over"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"gameover?"
0 0 23 3 1 #" "
0 0 14 3 8 #"a-cclocs"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 8 #"a-cclocs"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"gameover?"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 9 #"gameover?"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 3 #")) "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";; near-cupcake?"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";; WS -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 78
(
 #";; interp. checks to see if the current location of henry overlaps a"
 #"ny cupcake"
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"near-cupcake?"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 2 #" ("
0 0 14 3 15 #"ws-cupcake-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 3 #")) "
0 0 14 3 5 #"false"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 23 3 2 #" ("
0 0 14 3 15 #"ws-cupcake-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 13 #"intersection?"
0 0 23 3 2 #" ("
0 0 14 3 8 #"ws-henry"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 3 #") ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 15 #"ws-cupcake-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"             "
0 0 14 3 4 #"true"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 13 #"near-cupcake?"
0 0 23 3 2 #" ("
0 0 14 3 7 #"make-ws"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 2 #" ("
0 0 14 3 15 #"ws-cupcake-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 38 #"                                     ("
0 0 14 3 16 #"ws-waypoint-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 38 #"                                     ("
0 0 14 3 8 #"ws-henry"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 38 #"                                     ("
0 0 14 3 7 #"ws-time"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 7 #"))))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";; intersection?"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";; Henry Cupcake -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 59
#";; interp. checks to see if henry has contacted the cupcake"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"intersection?"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 1 #" "
0 0 14 3 9 #"a-cupcake"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 23 3 2 #" ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 7 #"henry-x"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 2 #") "
0 0 20 3 2 #"20"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 9 #"cupcake-x"
0 0 23 3 1 #" "
0 0 14 3 9 #"a-cupcake"
0 0 23 3 2 #") "
0 0 20 3 2 #"20"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 7 #"henry-y"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 2 #") "
0 0 20 3 2 #"20"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 9 #"cupcake-y"
0 0 23 3 1 #" "
0 0 14 3 9 #"a-cupcake"
0 0 23 3 2 #") "
0 0 20 3 2 #"20"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 7 #"henry-x"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 2 #") "
0 0 20 3 2 #"20"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 9 #"cupcake-x"
0 0 23 3 1 #" "
0 0 14 3 9 #"a-cupcake"
0 0 23 3 2 #") "
0 0 20 3 2 #"20"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 7 #"henry-y"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 2 #") "
0 0 20 3 2 #"20"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 9 #"cupcake-y"
0 0 23 3 1 #" "
0 0 14 3 9 #"a-cupcake"
0 0 23 3 2 #") "
0 0 20 3 2 #"20"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 7 #"henry-x"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 2 #") "
0 0 20 3 2 #"20"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 9 #"cupcake-x"
0 0 23 3 1 #" "
0 0 14 3 9 #"a-cupcake"
0 0 23 3 2 #") "
0 0 20 3 2 #"20"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 7 #"henry-y"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 2 #") "
0 0 20 3 2 #"20"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 9 #"cupcake-y"
0 0 23 3 1 #" "
0 0 14 3 9 #"a-cupcake"
0 0 23 3 2 #") "
0 0 20 3 2 #"20"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 7 #"henry-x"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 2 #") "
0 0 20 3 2 #"20"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 9 #"cupcake-x"
0 0 23 3 1 #" "
0 0 14 3 9 #"a-cupcake"
0 0 23 3 2 #") "
0 0 20 3 2 #"20"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 7 #"henry-y"
0 0 23 3 1 #" "
0 0 14 3 7 #"a-henry"
0 0 23 3 2 #") "
0 0 20 3 2 #"20"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 9 #"cupcake-y"
0 0 23 3 1 #" "
0 0 14 3 9 #"a-cupcake"
0 0 23 3 2 #") "
0 0 20 3 2 #"20"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 28 #";; current-waypoint-reached?"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";; WS -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 62
#";; interp. checks to see if the next waypoint has been reached"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 25 #"current-waypoint-reached?"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 2 #" ("
0 0 14 3 16 #"ws-waypoint-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 3 #")) "
0 0 14 3 5 #"false"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 7 #"henry-x"
0 0 23 3 2 #" ("
0 0 14 3 8 #"ws-henry"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 4 #")) ("
0 0 14 3 4 #"wp-x"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 16 #"ws-waypoint-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 7 #"henry-y"
0 0 23 3 2 #" ("
0 0 14 3 8 #"ws-henry"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 4 #")) ("
0 0 14 3 4 #"wp-y"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 16 #"ws-waypoint-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 8 #")))))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";; make-waypoint"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";; WaypointLocs Number Number MouseEvent -> WS"
0 0 23 29 1 #"\n"
0 0 17 3 70
(
 #";; adds a new waypoint to the waypointlocs list based on a mouse cli"
 #"ck"
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"make-waypoint"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 1 #" "
0 0 14 3 10 #"mouseevent"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 23 3 1 #" "
0 0 14 3 10 #"mouseevent"
0 0 23 3 1 #" "
0 0 19 3 13 #"\"button-down\""
0 0 23 3 3 #")) "
0 0 14 3 4 #"a-ws"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 7 #"make-ws"
0 0 23 3 2 #" ("
0 0 14 3 15 #"ws-cupcake-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 6 #"append"
0 0 23 3 2 #" ("
0 0 14 3 16 #"ws-waypoint-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 3 #") ("
0 0 14 3 4 #"list"
0 0 23 3 2 #" ("
0 0 14 3 7 #"make-wp"
0 0 23 3 1 #" "
0 0 14 3 1 #"x"
0 0 23 3 1 #" "
0 0 14 3 1 #"y"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 8 #"ws-henry"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 7 #"ws-time"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 13 #"make-waypoint"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 7 #"make-ws"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 6 #"henry1"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"               "
0 0 20 3 1 #"5"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"               "
0 0 20 3 1 #"5"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"               "
0 0 19 3 13 #"\"button-down\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 7 #"make-ws"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 7 #"make-wp"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 14 3 6 #"henry1"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 9 #";; render"
0 0 23 29 1 #"\n"
0 0 17 3 14 #";; WS -> Image"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";; Takes a world and renders it into an image."
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 11 #"HENRY-IMAGE"
0 0 23 3 2 #" ("
0 0 14 3 13 #"overlay/align"
0 0 23 3 1 #" "
0 0 19 3 8 #"\"middle\""
0 0 23 29 1 #"\n"
0 0 23 3 35 #"                                   "
0 0 19 3 8 #"\"middle\""
0 0 23 29 1 #"\n"
0 0 23 3 36 #"                                   ("
0 0 14 3 4 #"text"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"H\""
0 0 23 3 1 #" "
0 0 20 3 2 #"36"
0 0 23 3 1 #" "
0 0 19 3 9 #"\"darkred\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 36 #"                                   ("
0 0 14 3 6 #"square"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 23 3 1 #" "
0 0 19 3 6 #"\"gray\""
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 13 #"CUPCAKE-IMAGE"
0 0 23 3 1 #" "
0 2          21 59 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           5 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0+\0\0\0,\b"
 #"\6\0\0\0\374XAx\0\0\b\364IDATX\205\275\231]l\\G\25"
 #"\307\177g\326B\352S\36\23\207\"\321x\327mU\aD\274\327F\b\1\17x"
 #"\375\0B\"\215?\22\27)MU\22\350ST;E\265y!6\250\311F\225"
 #"@(-\1Z \216?\332\n\211\264R\263)\22\355\v\262w\223\n%i\213"
 #"\327N\373\222\330i\232\a*UmQ|\17\0173w\356\307n\232u\0251\222"
 #"\255{\347\316\234\371\237\377\374\347\234\231"
 #"Y\1\224;Q\4\4P\5\221\34\252\353\210\b\250\246\6\30\355\273\27$\244\\"
 #"\251\177\236!\356\20\330\26\312h\251\220"
 #"z/\237\255oh\364;\17\366\26\26GK\5T\225cg\227\1x\374\273\235"
 #"\210\321\r1l\356\24>_4]\221\374&\22\17y\354\357KV&\e(w"
 #"\4l\3\221\256\"I\262ePx\274o\233\3232\250j\2034Z\31\353\377\362"
 #"'M\352FK\205\226\373\267m\310\255"
 #"\26\312\255\26\201\210\240\332\370\305\250\325"
 #"\263Qe\335\265C\r\345\263\377nh{G\300\246\246R\rH\330\320\246\331B"
 #"\32+\335\az\23\20B\21v=\363i\354\304\376\2G\316\246\373\264\0046\313"
 #"\312\241\276\2\241\304\365G\317,\245\332"
 #"\327\26\253\250d\373\2154\330\31\272\331"
 #"\r\300L\333\";\237\375\230\227\366\337"
 #"\5\300\316\343\237\320\271\377?\214J!"
 #"\345\344\206B\327h)\17\300\3213u"
 #" \344V\353\323\2\n\341\247\277\266\340"
 #"\367}\323;=\373\344n\16\16\34\366m\327f_FD\230\311-\360\3403\237"
 #"\362\326\233\237\360\366\263\233PU\356\337"
 #"\377!\357\374n\23\345\327\226!\324\326\230=\324W@\215\360\324="
 #"\a\22\276\231\30\230\b\20\"\256\316\206\244\34\32j*<E\254\252*"
) 500
(
 #"w\377x7WN\314\262e\370\a\274?{\232o\255}\231\227\16\274\a|\201"
 #"\373\367\177\b\300[\317nb\340\370\307"
 #"\230\3y\216\274V\277=\263\243\245\202"
 #"\237f\375\311\323\216\251o\20\4\275~"
 #"\340\347\376\332\16\300\303?\\\365S-\"^\16\221\3s\343{88\370\v\266"
 #">2\354\355_91\313\332\354\313\0"
 #"\254\336\270\16\300\353\233\337\365\337\223\322"
 #"\3110k\260\323\233\6\32\r.\307\17R\255V\21\347^\30\206\30cbp\265"
 #"\32\305b\321\263Y\354\t\250V\253\200"
 #"A\325\331U\341\312\211Y\276\370\3500"
 #"WN\314b\200\315C\337\343\375\331WRH\216U\352\r,\306\242\23R@\17"
 #"\365\305\214&\2472\b\2\212=\201\355"
 #"ll\367G\36\274\306W\356>\355\333"
 #"\204a\230\262%\32?\257\316\234\6Q"
 #"\256\374~\6\200\366G\207-{\231\361\233\206?@\233\211!9\375{\27l\335"
 #"\363\275\3516\221^\e\222\246K\271\21"
 #"\343\325\205E0\266\325\374\304\b\3037"
 #"{\0\3302\374}o\347\332\334+\254"
 #"\336\270\316\353\233\337\245\\YI\1\217\220\0320\16hLr\314j\232!;\245"
 #"Q\t\343-`&\330\357]\264\16F3\22\364\366\270/v\214\253\37\274\17\330"
 #"Hpm\366o\\\233\213% \"\214\226:\262\356\203\202\361\203:P\"B\350"
 #"\2512\200\341\271\36\3451SES\301\3369W\311#\225|\243\361\204s\n\4"
 #"A7\335\301\16\206\246N\361\306\226\367"
 #"\230m[d\355\203\353\\\275q\203\325"
 #"\e\327\231\311-\360\306\226\367\308|\262\251-p\v,\311L\366YD\20\21"
 #"\202 h\232.Em\322\257U\253\4A\0\n\317\365(\265Z-n\3\250\n"
 #"F\204bq\a:9\rXIDe\370\360)\237HPCv\261{"
 #";\311\212\321R\1\324p\264\362N\3\260\b|\366}\241\272\210\301:\24"
) 500
(
 #"\227(i\204\350\201\337\200\204\310\361\203"
 #"){\325j\225\20\305 >D\315\215\357F\304`\24\227nc\320>t\215\226"
 #"\n(\360\321\177\357B\24\306\372;\e"
 #"\322\250\210\360\207\2276#\"\354\333\271"
 #"\346\201\367\6=d\213\252 \342\0;"
 #"\371T\35\373{\27\254\243\177\372z\340\352\27P5\314\215\357ahj&vW"
 #",\363Q\312m\213\200&\343id\370V\200\223\3{p\320\20\25,g\270\370"
 #"\274\220\266c\224j\265\346l\304\231/"
 #"\b\2\257\365\201\303']\24\31\241\\"
 #"\251\247\223{\264\320\222\v#[\366\355\\c\373\227N\247+\17<\r.\273A"
 #"\243\\P\b\202^\212\316\271\347{\34119\227\32c~b\304\23\23\4\201_"
 #"+`\267\221\0mc\375\235\34y\365"
 #"m\373v\306\206\214\27\312\0065\302\321W\337N\r\374D\251@\230\0001'J"
 #"\371\325:\352t\25\261\35\265\377cB"
 #"2\0203\257\252\31}\247\213\2\263O"
 #"\016345\203(\354\232\232&\224\21"
 #"\332\354\n7\21\265\240\312\256_\235\242"
 #"\247\230\236\342'\372\n\f\374\322\255X"
 #"O\271\341\211R'\241\300\340\344t\"ZX\255&%c\373\31\346'v{\300"
 #"CS\247\374\30B.\361\34\"b\20QTcr\322{\203\322r*\367C\234"
 #"\2756\273\201E#-\332\204\261kj\232\371\211\21\202 `\254t\37/\270\305"
 #"t\344\314\22\373v\256yI\211\302\213"
 #"\343\273\31\234\232\366\266\347'F\30t"
 #"al`\362\317\214\365w\272\315\373:\203\223\247\bC\305\30!tb1\345J"
 #"\235\261\376\202g02\222\215\251aB"
 #"\202\363\343\303\36@T\306\372;\31\234"
 #"\372\v\203\223\323\fNNs\250\2773"
 #"e\343\305\361\21\236\252,\21\4\335\326aU\6'\247\231\e\337\343Z\30"
 #"\206\372.3TZ\266\323/q8\233\177r\17\345J=bVX\\\\"
) 500
(
 #"\364\323689\315\317\372\357\345\251\312"
 #"\222]\f\337\371*\37\311]>\210G\241$\231~m\346\t\t\202^\233\261\316"
 #",\371\357\363\23#\236Q\305$vc\311MR\350#j2\31\205(9\247\366"
 #"\266x\360\207\22:2)\375\375\366\37"
 #"\377\362\240\242Z\0371\\;\221\34A"
 #"\320\355\\\217\272\252\337\300D}\342\205"
 #"eu=89M\210\"\32\262\376\355"
 #"\177z\aT\225\371\361\37\331\253\246\327"
 #"\22q6\311\226\210\225\200\212\233\332\311"
 #"\31\242\fR,\26\251\325\26Inz\346'FR{\213T1q\364\235\233\30"
 #"a\360\360I\252\347j\20*\242m~\257\221\23\203b7\347\226h\333\247\2349"
 #"0~\346I!:\265\252*\303\223\247\320\244n\23y=\207\360\340\344\311T8"
 #"JJ\344\305\361\21\253yw\362\215\26U\326a\t\265\341D\233\4)\"\242\315"
 #"6(1\340<\305\355\357R\273\260-"
 #"U\337\335\265\202\321\220\352\245\2\335]"
 #"u\336\274`O\274\3\207Oz\35F\16uw\255p\356b\a\335]+\0\234"
 #"\273\230\336\2\26\267_\246za\e\307"
 #"2\373\330\354i\270\255\351N*\325\310"
 #">ww\255P\273\260\215\342\366\313Dz\v%:4\n_\333n\201\274\360\363"
 #"\207\"\36\350\356Zq\214YK\35["
 #"\205\225\253\352A\237\277\324\301\216\aV"
 #"\b\303H\367J\22N\26[\323\263tv\233\230o\27\357D\276]\310\267\347\310"
 #"\267\v\352\342Ya\253\241\323\265\261@"
 #"\304\3\352\330\2\353n\27%\212\353o"
 #"\333\206\356]\334i\303\217\2338d\336\26l\252\201il\22\31\21\23;\265."
 #"v\340\350b\252c\v\344\267:\306\bSq\332\333\241\221=[o\e\267\304l"
 #"\262\224+u\346\316n#\337n\331\232;\273\rqG\231P\5\243n"
 #"\307\224\260+hb\23\355V\260\306C-\257*\347/v2\324w\231\225"
) 349
(
 #"5\253a{\356\272\365\235XK`}\307D\274\\w;z#J\350\4\251\306"
 #"\35\213\22\377\243\3766\32\245C\233\275"
 #"\206K\2260=\336\347\1\e\25q\306\"\355\201\325\252g;4i\2159p+"
 #"kP\273\330\301P\337\345\30\274\270CuF\223\321\233H\256\351EsK\327G"
 #"68\27\350\356Z\261\332\223\20\3244\260\220|\27r\210\n\260\216$By<"
 #"\315B\375j\350$POM\277j\226u[Zc\326\215\225o\27v<\260\314"
 #"\\\223\323\254\a\32\351Tc\211$e"
 #"\261\274\252>\346j\263\376\237\1m\303"
 #"\327\364\"\222\32\304\a\4\247i\303M"
 #"\227e\233\244\337fu\376[\266\242\261"
 #"mk\367\263\340\246\252\223\35\17,c"
 #"2zR\325\370\376K\214\275\273%\207"
 #"\377\5\314\261\275.\351>\347/\345\343\373\327\26.^[\2\e\3319zf\211"
 #"Q\315\247,g\317[F\355\327\320\335"
 #"JYo\327Y\276*\366\252\311\375\245\200\266X6|M_\256,\273'\373\273"
 #"V\316\375\264\30\355ECw\307\225\23"
 #"\303\322\325u'\23\341\334\245{\0\310\1G+KMm\337\256\334\366~6\333"
 #"\300j\326\322\27}\213\256\355\233"
 #"\25\243\326\201\317\363\363g\266\374\17\343!\210\301"
 #"x\232|,\0\0\0\0IEND\256B`\202"
) 0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 6 #"render"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 13 #"draw-cupcakes"
0 0 23 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 23 3 1 #" "
0 0 14 3 11 #"HENRY-IMAGE"
0 0 23 3 2 #" ("
0 0 14 3 7 #"henry-x"
0 0 23 3 2 #" ("
0 0 14 3 8 #"ws-henry"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 31 #"                              ("
0 0 14 3 7 #"henry-y"
0 0 23 3 2 #" ("
0 0 14 3 8 #"ws-henry"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 31 #"                              ("
0 0 14 3 11 #"empty-scene"
0 0 23 3 1 #" "
0 0 20 3 3 #"600"
0 0 23 3 1 #" "
0 0 20 3 3 #"600"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                 ("
0 0 14 3 15 #"ws-cupcake-locs"
0 0 23 3 1 #" "
0 0 14 3 4 #"a-ws"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";; draw-cupcakes"
0 0 23 29 1 #"\n"
0 0 17 3 30 #";; Image Cupcake-Locs -> Image"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"draw-cupcakes"
0 0 23 3 1 #" "
0 0 14 3 10 #"background"
0 0 23 3 1 #" "
0 0 14 3 8 #"a-cclocs"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 8 #"a-cclocs"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 9 #"         "
0 0 14 3 10 #"background"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 23 3 1 #" "
0 0 14 3 8 #"a-cclocs"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 13 #"draw-cupcakes"
0 0 23 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 23 3 1 #" "
0 0 14 3 13 #"CUPCAKE-IMAGE"
0 0 23 3 2 #" ("
0 0 14 3 9 #"cupcake-x"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 8 #"a-cclocs"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 38 #"                                     ("
0 0 14 3 9 #"cupcake-y"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 8 #"a-cclocs"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 37 #"                                     "
0 0 14 3 10 #"background"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 25 #"                        ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 8 #"a-cclocs"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";;examples"
0 0 23 29 1 #"\n"
0 0 17 3 151
(
 #";(define worldstateexample (make-ws (list (make-cupcake 400 400) (ma"
 #"ke-cupcake 150 150) (make-cupcake 250 250) (make-cupcake 300 300)) e"
 #"mpty henry2 0))"
) 0 0 23 29 1 #"\n"
0 0 17 3 27 #";(render worldstateexample)"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 17 #";;make-initial-ws"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";; Number -> WorldState"
0 0 23 29 1 #"\n"
0 0 17 3 92
(
 #";; Given a number of cupcakes, generates an initial worldstate with "
 #"that number of cupcakes "
) 0 0 23 29 1 #"\n"
0 0 17 3 89
(
 #";; randomly placed inside the world, an empty Waypoint-Locs, a Henry"
 #" placed at the center"
) 0 0 23 29 1 #"\n"
0 0 17 3 21 #";; and a current time"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 15 #"ws-cupcake-locs"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-initial-ws"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 4 #"))) "
0 0 20 3 1 #"4"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 15 #"make-initial-ws"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 7 #"make-ws"
0 0 23 3 2 #" ("
0 0 14 3 17 #"make-cupcake-locs"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 2 #" ("
0 0 14 3 10 #"make-henry"
0 0 23 3 1 #" "
0 0 20 3 3 #"300"
0 0 23 3 1 #" "
0 0 20 3 3 #"300"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";;make-cupcake-locs"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";; Number CupcakeLocs -> CupcakeLocs"
0 0 23 29 1 #"\n"
0 0 17 3 71
(
 #";; Given a number of cupcakes to create and a list, adds that number"
 #" of"
) 0 0 23 29 1 #"\n"
0 0 17 3 44 #";; randomly coordinated cupcakes to the list"
0 0 23 29 1 #"\n"
0 0 17 3 17 #";; given empty, 2"
0 0 23 29 1 #"\n"
0 0 17 3 88
(
 #";; expects (cons (make-cupcake Random Random (cons (make-cupcake Ran"
 #"dom Random) empty)))"
) 0 0 23 29 1 #"\n"
0 0 17 3 57 #";; given (cons (make-cupcake (Random) (Random)) empty), 2"
0 0 23 29 1 #"\n"
0 0 17 3 124
(
 #";; expects (cons (make-cupcake Random Random (cons (make-cupcake Ran"
 #"dom Random) (cons (make-cupcake Random Random) empty))))"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 17 #"make-cupcake-locs"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 3 #")) "
0 0 20 3 1 #"2"
0 0 23 3 2 #") "
0 0 17 3 20 #";;just checking size"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"length"
0 0 23 3 2 #" ("
0 0 14 3 17 #"make-cupcake-locs"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 29 1 #"\n"
0 0 23 3 43 #"                                          ("
0 0 14 3 12 #"make-cupcake"
0 0 23 29 1 #"\n"
0 0 23 3 44 #"                                           ("
0 0 14 3 6 #"random"
0 0 23 3 1 #" "
0 0 20 3 3 #"600"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 44 #"                                           ("
0 0 14 3 6 #"random"
0 0 23 3 1 #" "
0 0 20 3 3 #"600"
0 0 23 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 20 3 1 #"2"
0 0 23 3 3 #")) "
0 0 20 3 1 #"3"
0 0 23 3 2 #") "
0 0 17 3 20 #";;just checking size"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"make-cupcake-locs"
0 0 23 3 1 #" "
0 0 14 3 8 #"a-cclocs"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 1 #"="
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 14 3 8 #"a-cclocs"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 17 #"make-cupcake-locs"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 12 #"make-cupcake"
0 0 23 29 1 #"\n"
0 0 23 3 37 #"                                    ("
0 0 14 3 6 #"random"
0 0 23 3 1 #" "
0 0 20 3 3 #"601"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 37 #"                                    ("
0 0 14 3 6 #"random"
0 0 23 3 1 #" "
0 0 20 3 3 #"601"
0 0 23 3 3 #")) "
0 0 14 3 8 #"a-cclocs"
0 0 23 3 3 #") ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 5 #"))]))"
0           0
